---
# tasks file for setup-ec2
- name: Installing boto library
  pip:
    name: boto
    state: present

- name: Generate a UUID for the ec2 host
  shell: uuidgen | head -c 6
  register: uuid

- name: Creating Security Group for Patu CI
  amazon.aws.ec2_group:
    name: "{{ secgroup_name }}"
    aws_region: "{{ aws_region }}"
    description: "{{ security_group_description }}"
    vpc_id: "{{ vpc_id }}"
    rules:
      - proto: all
        cidr_ip: "0.0.0.0/0"

- name: Launching Single Node Cluster Machines
  amazon.aws.ec2_instance:
    name: "single-node-cluster-{{ item+1 }}-{{ uuid.stdout }}"
    aws_region: "{{ aws_region }}"
    key_name: "{{ aws_key_name }}"
    instance_type: "{{ aws_instance_type }}"
    image_id: "{{ aws_image_id }}"
    security_group: "{{ secgroup_name }}"
    network:
      assign_public_ip: true
    subnet_id: "{{ aws_subnet }}"
    tags:
      NodeType: "patu-ci-single-node-cluster"
    state: running
    wait: true
  register: nodeIP
  loop: "{{ range(0, node_count | int) }}"

- name: Updating the node's public ip in inventory
  lineinfile:
    path: "{{ inventory_location }}"
    regexp: "singleNodeCluster"
    line: "[singleNodeCluster]\n{{ nodeIP['results'][item]['instances'][0]['public_ip_address']}} ansible_user={{ ansible_user }} ansible_connection=ssh node-name=single-node-cluster-{{ item+1 }}-{{ uuid.stdout }}"
  loop: "{{ range(0, node_count | int) }}"

- name: Refresh inventory to ensure new instaces exist in inventory
  meta: refresh_inventory

- name: Pause for a few seconds to allow the instances to finish booting
  pause:
    seconds: 20